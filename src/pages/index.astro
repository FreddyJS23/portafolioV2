---
import Layout from "../layouts/Layout.astro";
import Nav from "../components/Nav.astro";
import Presentation from "../components/Presentation.astro";
import Project from "../components/Project.astro";
import About from "../components/About.astro";
import Skill from "../components/Skill.astro";
import { getEntry } from "astro:content";
import MenuResponsive from "../components/MenuResponsive.astro";
import Titulos from "../components/Titulos.astro";

const { data: dataSkills } = await getEntry("skills", "skills");
const { tegnologias } = dataSkills;

const { data: dataProjects } = await getEntry("projects", "projects");
const { proyectos } = dataProjects;
---

<Layout
  titulo="Portafolio"
  descripcion="Portafolio con información relevante sobre mi"
>
  <!--  ------------------------------- navegacion -------------------------------  -->
  <header>
    <Nav />
    <MenuResponsive />
  </header>
  <div class="divider before:bg-primary after:bg-primary m-auto w-3/4"></div>
  <!---------------------------------- princiapl ------------------------------- -->
  <main class="flex flex-col gap-20 mt-28">
    <!-- ------------------------------ presentacion ------------------------------  -->
    <section
      id="presentation"
      class="opacity-0 flex flex-col md:m-auto lg:gap-48 lg:flex-row gap-24 relative xl:m-2 xl:justify-center"
    >
      <Presentation />
    </section>
    <!--  -------------------------------- proyectos -------------------------------  -->
    <section
      id="projects"
      class="opacity-0 flex flex-col relative gap-8 items-center mt-20 md:mt-16 lg:mt-28"
    >
      <Titulos titulo="Proyectos" className="w-40" />
      <img
        id="projectSvg"
        class="absolute top-[9px] ml-60 w-16 h-16 sm:w-28 sm:h-28 sm:ml-1 sm:right-44 sm:self-end sm:-top-8 2xl:right-1/4"
        src= `${import.meta.env.BASE_URL}assets/projects-completed-dark.svg`
        alt="proyectos"
        loading="lazy"
      />
      <div
        class="flex flex-col md:justify-center md:flex-row gap-8 m-auto md:gap-6 md:flex-wrap 2xl:gap-24"
      >
        {
          proyectos.map((proyecto) => (
            <Project
              proyecto={proyecto.proyecto}
              imagen={proyecto.imagen}
              repositorio={proyecto.repositorio}
              web={proyecto.web}
              descripcion={proyecto.descripcion}
              tegnologias={proyecto.tegnologias}
            />
          ))
        }
      </div>
    </section>
    <!--  -------------------------------- sobre mi --------------------------------  -->
    <section
      id="about"
      class="opacity-0 flex flex-col items-center m-auto gap-5"
    >
      <Titulos titulo="Sobre mi" className="w-36" />
      <About />
    </section>
    <!--  ------------------------------- habilidades ------------------------------  -->
    <section
      id="skills"
      class="opacity-0 flex flex-col gap-8 items-center md:m-auto"
    >
      <Titulos titulo="Tegnologias" className="w-48" />                                                                                        

      <div
        class="flex w-full flex-col sm:flex-wrap sm:w-auto sm:flex-row sm:justify-center gap-8 "
      >
        {
          tegnologias.map((skill) => (
            <Skill
              name={skill.skill}
              alt={skill.image.alt}
              src={skill.image.src}
            />
          ))
        }
      </div>
      <img
        id="skillSvg"
        class="self-end w-28 h-28 relative sm:self-start xl:-top-44 2xl:-top-4  "
        src=`${import.meta.env.BASE_URL}assets/skills-dark.svg`
        alt="generando skill"
        loading="lazy"
      />
    </section>
  </main>
  <!--  --------------------------------- footer --------------------------------- -->
  <footer class="footer footer-center p-4 bg-base-300 text-base-content mt-8">
    <div>
      <p>
        Copyright © 2023 - All right reserved, Hecho en Astro by Freddy Solarte
      </p>
    </div>
  </footer>
</Layout>

<script>
  
  const createObserverSections = () => {
    let options: IntersectionObserverInit = {
      root: null,
      rootMargin: "0px",
      threshold: [0.1],
    };

    const handleIntersection = (
      entries: IntersectionObserverEntry[],
      observer: IntersectionObserver
    ): void => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("animate-fade-down");
          observer.unobserve(entry.target);
        }
      });
    };

    let sections = document.querySelectorAll("section");
    let observer: IntersectionObserver = new IntersectionObserver(
      handleIntersection,
      options
    );

    sections.forEach((section) => {
      observer.observe(section);
    });
  };

  createObserverSections();
</script>
